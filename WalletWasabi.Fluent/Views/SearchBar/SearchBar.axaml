<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:s="clr-namespace:WalletWasabi.Fluent.Views.SearchBar"
             mc:Ignorable="d" d:DesignWidth="1200" d:DesignHeight="800"
             xmlns:i="clr-namespace:Avalonia.Xaml.Interactivity;assembly=Avalonia.Xaml.Interactivity"
             xmlns:ia="clr-namespace:Avalonia.Xaml.Interactions.Core;assembly=Avalonia.Xaml.Interactions"
             xmlns:ic="clr-namespace:Avalonia.Xaml.Interactions.Custom;assembly=Avalonia.Xaml.Interactions"
             xmlns:searchBar="clr-namespace:WalletWasabi.Fluent.ViewModels.SearchBar"
             xmlns:behaviors="clr-namespace:WalletWasabi.Fluent.Behaviors"
             x:CompileBindings="True"
             x:DataType="searchBar:SearchBarViewModel"
             x:Class="WalletWasabi.Fluent.Views.SearchBar.SearchBar">
  <UserControl.Resources>
    <Thickness x:Key="TextControlBorderThemeThicknessFocused">1</Thickness>
  </UserControl.Resources>

  <Design.DataContext>
    <searchBar:SearchBarDesignViewModel />
  </Design.DataContext>

  <UserControl.Styles>

    <Style Selector="TextBox#SearchBox">
      <Setter Property="Background" Value="Transparent" />
      <Setter Property="BorderBrush" Value="{DynamicResource TileBorderColor}" />
      <Setter Property="BorderThickness" Value="1 1 1 1" />
      <Setter Property="Margin" Value="0" />
      <Setter Property="FontSize" Value="12" />
      <Setter Property="Padding" Value="6 3" />
      <Setter Property="VerticalContentAlignment" Value="Center" />
    </Style>

    <Style Selector="TextBox#SearchBox /template/ Border#PART_BorderElement">
      <Setter Property="CornerRadius" Value="5" />
    </Style>

    <Style Selector="TextBox#SearchBox /template/ DataValidationErrors">
      <Setter Property="IsVisible" Value="False" />
    </Style>

    <Style Selector="TextBox:pointerover">
      <Setter Property="Foreground" Value="White" />
      <Setter Property="Cursor" Value="Hand" />
    </Style>

    <Style Selector="TextBox:pointerover /template/ Border#PART_BorderElement">
      <Setter Property="BorderBrush" Value="White" />
      <Setter Property="Background" Value="Transparent" />
    </Style>

    <Style
      Selector="TextBox:pointerover /template/ TextBlock#PART_Watermark, TextBox:pointerover /template/ TextBlock#PART_FloatingWatermark">
      <Setter Property="Foreground" Value="{DynamicResource TextControlPlaceholderForegroundPointerOver}" />
    </Style>

    <!-- Focused State -->
    <Style Selector="TextBox:focus">
      <Setter Property="Foreground" Value="{DynamicResource TextControlForegroundFocused}" />
      <Setter Property="Cursor" Value="Arrow" />
    </Style>

    <Style
      Selector="TextBox:focus /template/ TextBlock#PART_Watermark, TextBox:focus /template/ TextBlock#PART_FloatingWatermark">
      <Setter Property="Foreground" Value="{DynamicResource TextControlPlaceholderForegroundFocused}" />
    </Style>

    <Style Selector="TextBox:focus /template/ Border#PART_BorderElement">
      <Setter Property="Background" Value="Transparent" />
      <Setter Property="BorderBrush" Value="White" />
      <Setter Property="BorderThickness" Value="{DynamicResource TextControlBorderThemeThicknessFocused}" />
    </Style>
  </UserControl.Styles>

  <TextBox x:Name="SearchBox" Watermark="Search settings / advanced features" HorizontalAlignment="Left"
           Text="{Binding SearchText, Mode=TwoWay}" Width="400" VerticalAlignment="Center">
    <TextBox.InnerLeftContent>
      <PathIcon Data="{StaticResource action_center_regular}" Margin="10 0" />
    </TextBox.InnerLeftContent>
    <TextBox.InnerRightContent>
      <PathIcon Data="{StaticResource search_regular}" Margin="10 0" />
    </TextBox.InnerRightContent>
    <i:Interaction.Behaviors>
      <RoutedEventTriggerBehavior RoutedEvent="{x:Static InputElement.PointerPressedEvent}" RoutingStrategies="Tunnel">
        <ia:InvokeCommandAction Command="{Binding ShowListCommand}" />
      </RoutedEventTriggerBehavior>
      <RoutedEventTriggerBehavior RoutedEvent="{x:Static InputElement.GotFocusEvent}">
        <ia:InvokeCommandAction Command="{Binding ShowListCommand}" />
      </RoutedEventTriggerBehavior>
    </i:Interaction.Behaviors>
  </TextBox>

  <FlyoutBase.AttachedFlyout>
    <Flyout Placement="Bottom" ShowMode="Transient" FlyoutPresenterClasses="search">
      <s:SearchBarDropdown x:Name="SearchBarDropdown" />
    </Flyout>
    
  </FlyoutBase.AttachedFlyout>

  <i:Interaction.Behaviors>
    <behaviors:ShowAssociatedFlyoutBehavior IsSearchPanelOpen="{Binding IsSearchListVisible, Mode=TwoWay}"/>
  </i:Interaction.Behaviors>

</UserControl>