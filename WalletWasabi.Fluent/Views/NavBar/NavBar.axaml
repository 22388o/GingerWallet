<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:i="clr-namespace:Avalonia.Xaml.Interactivity;assembly=Avalonia.Xaml.Interactivity"
             xmlns:ia="clr-namespace:Avalonia.Xaml.Interactions.Core;assembly=Avalonia.Xaml.Interactions"
             xmlns:iac="clr-namespace:Avalonia.Xaml.Interactions.Custom;assembly=Avalonia.Xaml.Interactions"
             xmlns:c="using:WalletWasabi.Fluent.Controls"
             xmlns:conv="using:WalletWasabi.Fluent.Converters"
             xmlns:vm="using:WalletWasabi.Fluent.ViewModels.NavBar"
             xmlns:vmw="using:WalletWasabi.Fluent.ViewModels.Wallets"
             xmlns:behaviors="clr-namespace:WalletWasabi.Fluent.Behaviors"
             x:DataType="vm:NavBarViewModel"
             x:CompileBindings="True"
             mc:Ignorable="d" d:DesignWidth="280" d:DesignHeight="459"
             x:Class="WalletWasabi.Fluent.Views.NavBar.NavBar" UseLayoutRounding="False"
             Name="NavBarUserControl">
  <UserControl.Styles>
    <Style Selector="PathIcon">
      <Setter Property="Margin" Value="13 0 0 0" />
      <Setter Property="Height" Value="18" />
      <Setter Property="Width" Value="18" />
      <Setter Property="Foreground" Value="{DynamicResource NavBarItemForegroundBrush}" />
    </Style>
    <Style Selector="TextBlock.headerText">
      <Setter Property="FontSize" Value="14" />
      <Setter Property="Margin" Value="25 15 0 12" />
      <Setter Property="Opacity" Value="0.8" />
      <Setter Property="FontWeight" Value="Light" />
      <Setter Property="Foreground" Value="{DynamicResource NavBarItemForegroundBrush}" />
    </Style>
    <Style Selector="Separator">
      <Setter Property="Background" Value="{DynamicResource NavBarSeparatorBrush}" />
      <Setter Property="HorizontalAlignment" Value="Stretch" />
      <Setter Property="Margin" Value="{DynamicResource MenuFlyoutSeparatorThemePadding}" />
      <Setter Property="Height" Value="{DynamicResource MenuFlyoutSeparatorThemeHeight}" />
    </Style>
    <Style Selector="ListBox">
      <Setter Property="Margin" Value="0" />
      <Setter Property="Background" Value="Transparent" />
      <Setter Property="Padding" Value="0" />
    </Style>
    <Style Selector="ListBox.vertical > c|NavBarItem">
      <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" x:CompileBindings="False" />
      <Setter Property="IsHitTestVisible" Value="{Binding IsEnabled}" x:CompileBindings="False" />
      <Setter Property="Focusable" Value="{Binding IsEnabled}" x:CompileBindings="False" />
      <Setter Property="IsEnabled" Value="{Binding IsEnabled}" x:CompileBindings="False" />
    </Style>
    <Style Selector="ListBox.narrowItemPadding > c|NavBarItem">
      <Setter Property="Padding" Value="12 6 12 6" />
    </Style>
    <Style Selector="ListBox.vertical > c|NavBarItem:disabled PathIcon">
      <Setter Property="Foreground" Value="{DynamicResource NavBarItemDisabledBrush}" />
    </Style>
    <Style Selector="ListBox.horizontal > c|NavBarItem">
      <Setter Property="IndicatorOrientation" Value="Horizontal" />
      <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" x:CompileBindings="False" />
      <Setter Property="IsHitTestVisible" Value="{Binding IsEnabled}" x:CompileBindings="False" />
      <Setter Property="Focusable" Value="{Binding IsEnabled}" x:CompileBindings="False" />
      <Setter Property="IsEnabled" Value="{Binding IsEnabled}" x:CompileBindings="False" />
    </Style>
    <Style Selector="ListBox.horizontal > c|NavBarItem:disabled PathIcon">
      <Setter Property="Foreground" Value="{DynamicResource NavBarItemDisabledBrush}" />
    </Style>
    <Style Selector="c|NavBarTreeItem">
      <Setter Property="IsExpanded" Value="{Binding IsExpanded}" x:CompileBindings="False" />
      <Setter Property="TextBlock.Foreground" Value="{DynamicResource NavBarItemForegroundBrush}" />
    </Style>
    <Style Selector=":is(Button).NavButton">
      <Setter Property="Width" Value="{DynamicResource SplitViewCompactPaneLength}" />
      <Setter Property="Padding" Value="12,9,12,12" />
    </Style>
    <Style Selector=":is(Button).NavButton:disabled > PathIcon">
      <Setter Property="Foreground" Value="{DynamicResource NavBarItemDisabledBrush}" />
    </Style>
    <Style Selector=":is(Button).NavButton /template/ ContentPresenter">
      <Setter Property="Background" Value="Transparent" />
      <Setter Property="BorderBrush" Value="Transparent" />
    </Style>
    <Style Selector=":is(Button):checked.NavButton /template/ ContentPresenter">
      <Setter Property="Background" Value="Transparent" />
      <Setter Property="BorderBrush" Value="Transparent" />
    </Style>
    <Style Selector=":is(Button):unchecked.NavButton /template/ ContentPresenter">
      <Setter Property="Background" Value="Transparent" />
      <Setter Property="BorderBrush" Value="Transparent" />
    </Style>
    <Style Selector=":is(Button):disabled /template/ ContentPresenter#PART_ContentPresenter">
      <Setter Property="Background" Value="Transparent" />
    </Style>
    <Style Selector=":is(Button):pointerover /template/ ContentPresenter#PART_ContentPresenter">
      <Setter Property="Background" Value="{DynamicResource NavBarItemPointerOverBackgroundBrush}" />
    </Style>
  </UserControl.Styles>
  <DockPanel Margin="0 -4 0 4">
    <StackPanel DockPanel.Dock="Top" Spacing="5" Background="Transparent">
      <c:NavBarListBox Items="{Binding TopItems}"
                       SelectedItem="{Binding SelectedItem, Mode=TwoWay}"
                       Name="TopListBox"
                       Classes="vertical">
        <c:NavBarListBox.ItemTemplate>
          <DataTemplate x:DataType="vm:NavBarItemViewModel" x:CompileBindings="False">
            <Panel>
              <Panel Width="45" Background="Transparent" HorizontalAlignment="Left" ToolTip.Tip="{Binding Title}">
                <PathIcon HorizontalAlignment="Left">
                  <PathIcon.Data>
                    <Binding Path="IconName" Converter="{x:Static conv:NavBarIconConverter.Instance}" />
                  </PathIcon.Data>
                </PathIcon>
              </Panel>
              <TextBlock Text="{Binding Title}" Margin="55 0 0 0" />
            </Panel>
          </DataTemplate>
        </c:NavBarListBox.ItemTemplate>
      </c:NavBarListBox>
    </StackPanel>
    <StackPanel DockPanel.Dock="Bottom" Background="Transparent">
      <Separator />
      <!-- BottomItems List -->
      <c:NavBarListBox Items="{Binding BottomItems}"
                       SelectedItem="{Binding SelectedItem, Mode=TwoWay}"
                       Classes="horizontal"
                       Name="BottomListBox">

        <i:Interaction.Behaviors>
          <ia:DataTriggerBehavior Binding="{Binding IsOpen}" ComparisonCondition="Equal" Value="True">
            <iac:AddClassAction StyledElement="{Binding #BottomListBox}" ClassName="horizontal" RemoveIfExists="True" />
            <iac:RemoveClassAction StyledElement="{Binding #BottomListBox}" ClassName="vertical" />
          </ia:DataTriggerBehavior>
          <ia:DataTriggerBehavior Binding="{Binding IsOpen}" ComparisonCondition="Equal" Value="False">
            <iac:AddClassAction StyledElement="{Binding #BottomListBox}" ClassName="vertical" RemoveIfExists="True" />
            <iac:RemoveClassAction StyledElement="{Binding #BottomListBox}" ClassName="horizontal" />
          </ia:DataTriggerBehavior>
        </i:Interaction.Behaviors>
        <c:NavBarListBox.Styles>
          <Style Selector=":is(ListBox).vertical /template/ #PART_ItemsPresenter > ReversibleStackPanel">
            <Setter Property="Orientation" Value="Vertical" />
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="ReverseOrder" Value="True" />
          </Style>
          <Style Selector=":is(ListBox).horizontal /template/ #PART_ItemsPresenter > ReversibleStackPanel">
            <Setter Property="Orientation" Value="Horizontal" />
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="ReverseOrder" Value="False" />
          </Style>
          <Style Selector=":is(ListBox)">
            <Setter Property="ItemsPanel">
              <Setter.Value>
                <ItemsPanelTemplate>
                  <ReversibleStackPanel />
                </ItemsPanelTemplate>
              </Setter.Value>
            </Setter>
          </Style>
        </c:NavBarListBox.Styles>
        <c:NavBarListBox.ItemTemplate>
          <DataTemplate x:DataType="vm:NavBarItemViewModel">
            <Panel Width="45" Background="Transparent" HorizontalAlignment="Center" ToolTip.Tip="{Binding Title}"
                   ToolTip.VerticalOffset="-17" ToolTip.Placement="Top">
              <PathIcon HorizontalAlignment="Left">
                <PathIcon.Data>
                  <Binding Path="IconName" Converter="{x:Static conv:NavBarIconConverter.Instance}" />
                </PathIcon.Data>
              </PathIcon>
            </Panel>
          </DataTemplate>
        </c:NavBarListBox.ItemTemplate>
      </c:NavBarListBox>
    </StackPanel>
    <!-- Items List -->
    <DockPanel Background="Transparent">

      <TextBlock Classes="headerText" DockPanel.Dock="Top" Text="Wallets" IsVisible="{Binding IsOpen}" />
      <c:NavBarListBox Items="{Binding Wallets}"
                       SelectedItem="{Binding SelectedItem, Mode=TwoWay}"
                       Name="ItemsListBox"
                       Classes="vertical draggable narrowItemPadding"
                       RenderTransformOrigin="0%,50%"
                       VerticalAlignment="Stretch">
        <i:Interaction.Behaviors>
          <behaviors:NavBarSelectedIndicatorParentBehavior />
        </i:Interaction.Behaviors>
        <c:NavBarListBox.DataTemplates>
          <DataTemplate DataType="vmw:WalletViewModelBase">
            <Panel Height="48" Width="48" ToolTip.Tip="{Binding Title}" Background="Transparent">
              <DockPanel  Background="Transparent"
                         x:CompileBindings="False">
                <TextBlock DockPanel.Dock="Bottom" Text="{Binding Title}"
                           TextTrimming="CharacterEllipsis" Classes="h9" TextAlignment="Center" />
                <Panel>
                  <!-- Wallet Icon -->
                  <Image Opacity="0.7" Width="28" Height="28" VerticalAlignment="Center" HorizontalAlignment="Center"
                         Source="{Binding IconName, Converter={x:Static conv:NavBarIconConverter.Instance}}" />
                </Panel>
              </DockPanel>
            </Panel>
          </DataTemplate>
        </c:NavBarListBox.DataTemplates>
      </c:NavBarListBox>
    </DockPanel>
  </DockPanel>
</UserControl>