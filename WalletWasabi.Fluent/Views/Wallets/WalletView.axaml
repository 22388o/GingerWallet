<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:converters="clr-namespace:WalletWasabi.Fluent.Converters"
             xmlns:i="clr-namespace:Avalonia.Xaml.Interactivity;assembly=Avalonia.Xaml.Interactivity"
             xmlns:behaviors="using:WalletWasabi.Fluent.Behaviors"
             xmlns:c="clr-namespace:WalletWasabi.Fluent.Controls"
             xmlns:locator="using:WalletWasabi.Fluent"
             xmlns:tiles="using:WalletWasabi.Fluent.ViewModels.Wallets.Home.Tiles"
             xmlns:wallets="clr-namespace:WalletWasabi.Fluent.ViewModels.Wallets"
             xmlns:history="using:WalletWasabi.Fluent.Views.Wallets.Home.History"
             mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="850"
             x:DataType="wallets:WalletViewModel"
             x:CompileBindings="True"
             ClipToBounds="False"
             x:Class="WalletWasabi.Fluent.Views.Wallets.WalletView">
  <c:ContentArea ScrollViewer.VerticalScrollBarVisibility="Disabled" ClipToBounds="False" HeaderBackground="{DynamicResource HeaderRegionColor}">
    <c:ContentArea.Title>
      <StackPanel>
        <DockPanel>
          <StackPanel HorizontalAlignment="Right" Margin="0 -5 0 0" DockPanel.Dock="Right" Orientation="Horizontal" Spacing="10">
            <Button Classes="function" Command="{Binding BroadcastPsbtCommand}" IsVisible="{Binding PreferPsbtWorkflow}">
              <StackPanel Orientation="Horizontal" Spacing="15">
                <PathIcon Data="{StaticResource live_regular}" />
                <TextBlock Text="Broadcast" />
              </StackPanel>
            </Button>
            <Button Classes="function"
                    IsVisible="{Binding !IsWalletBalanceZero}"
                    Command="{Binding SendCommand}">
              <StackPanel Orientation="Horizontal" Spacing="15">
                <PathIcon Data="{StaticResource wallet_action_send}" />
                <TextBlock Text="Send" />
              </StackPanel>
            </Button>
            <Button Classes="function"
                    IsVisible="{Binding !IsEmptyWallet}"
                    Command="{Binding ReceiveCommand}">
              <StackPanel Orientation="Horizontal" Spacing="15">
                <PathIcon Data="{StaticResource wallet_action_receive}" />
                <TextBlock Text="Receive" />
              </StackPanel>
            </Button>
            <Button Classes="function">
              <Button.Flyout>
                <MenuFlyout Placement="Bottom">
                  <MenuItem Header="Wallet Info" Command="{Binding WalletInfoCommand}">
                    <MenuItem.Icon>
                      <PathIcon Data="{StaticResource info_regular}" />
                    </MenuItem.Icon>
                  </MenuItem>
                  <MenuItem Header="Wallet Settings" Command="{Binding WalletSettingsCommand}">
                    <MenuItem.Icon>
                      <PathIcon Data="{StaticResource settings_regular}" />
                    </MenuItem.Icon>
                  </MenuItem>
                </MenuFlyout>
              </Button.Flyout>
              <PathIcon Data="{StaticResource more_regular}" Foreground="{DynamicResource TextForegroundColor}" />
            </Button>
          </StackPanel>
          <TextBlock TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" Text="{Binding WalletName, FallbackValue=My Wallet with a very long name}" />
        </DockPanel>
        <Separator DockPanel.Dock="Bottom" Margin="-200 13 -200 0" HorizontalAlignment="Stretch" />
      </StackPanel>

    </c:ContentArea.Title>
    <DockPanel Name="Panel" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
      <i:Interaction.Behaviors>
        <behaviors:BoundsObserverBehavior Bounds="{Binding #Panel.Bounds, Mode=OneWay}"
                                          Width="{Binding WidthSource, Mode=TwoWay}"
                                          Height="{Binding HeightSource, Mode=TwoWay}"
                                          x:CompileBindings="False"/>
      </i:Interaction.Behaviors>
      <Panel Classes.smallLayout="{Binding IsSmallLayout}"
             Classes.normalLayout="{Binding IsNormalLayout}"
             Classes.wideLayout="{Binding IsWideLayout}"
             Classes.isEmptyWallet="{Binding IsEmptyWallet}">
        <Panel.Styles>
          <Style Selector="Panel.smallLayout">
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="Margin" Value="0,0,0,11"/>
            <Setter Property="(DockPanel.Dock)" Value="Top"/>
          </Style>
          <Style Selector="Panel.normalLayout">
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="Margin" Value="0,0,0,11"/>
            <Setter Property="(DockPanel.Dock)" Value="Top"/>
          </Style>
          <Style Selector="Panel.wideLayout">
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="Margin" Value="0,0,11,0"/>
            <Setter Property="(DockPanel.Dock)" Value="Left"/>
          </Style>
          <Style Selector="Panel.isEmptyWallet">
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="VerticalAlignment" Value="Stretch"/>
          </Style>
        </Panel.Styles>
        <ScrollViewer Name="ScrollViewer"
                      IsVisible="{Binding !IsEmptyWallet}"
                      Classes.smallLayout="{Binding IsSmallLayout}"
                      Classes.normalLayout="{Binding IsNormalLayout}"
                      Classes.wideLayout="{Binding IsWideLayout}">
          <ScrollViewer.Styles>
            <Style Selector="ScrollViewer.smallLayout">
              <Setter Property="HorizontalScrollBarVisibility" Value="Auto"/>
              <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
            </Style>
            <Style Selector="ScrollViewer.normalLayout">
              <Setter Property="HorizontalScrollBarVisibility" Value="Auto"/>
              <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
            </Style>
            <Style Selector="ScrollViewer.wideLayout">
              <Setter Property="HorizontalScrollBarVisibility" Value="Auto"/>
              <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
            </Style>
          </ScrollViewer.Styles>
          <i:Interaction.Behaviors>
            <behaviors:HorizontalScrollViewerBehavior RequireShiftKey="False" ScrollChangeSize="Page"/>
          </i:Interaction.Behaviors>
          <ItemsControl Items="{Binding Tiles}"
                        Classes.smallLayout="{Binding IsSmallLayout}"
                        Classes.normalLayout="{Binding IsNormalLayout}"
                        Classes.wideLayout="{Binding IsWideLayout}">
            <ItemsControl.Styles>
              <Style Selector="ItemsControl.smallLayout">
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="VerticalAlignment" Value="Top"/>
                <Setter Property="Margin" Value="0 0"/>
                <Setter Property="Padding" Value="0,0,0,10"/>
              </Style>
              <Style Selector="ItemsControl.normalLayout">
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="VerticalAlignment" Value="Top"/>
                <Setter Property="Margin" Value="0 0"/>
                <Setter Property="Padding" Value="0,0,0,10"/>
              </Style>
              <Style Selector="ItemsControl.wideLayout">
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="VerticalAlignment" Value="Top"/>
                <Setter Property="Margin" Value="0 0"/>
                <Setter Property="Padding" Value="0,0,10,0"/>
              </Style>
              <Style Selector="ItemsControl > ContentPresenter" x:DataType="tiles:TileViewModel">
                <Setter Property="Grid.Column" Value="{Binding Column}" />
                <Setter Property="Grid.Row" Value="{Binding Row}" />
                <Setter Property="Grid.ColumnSpan" Value="{Binding ColumnSpan}" />
                <Setter Property="Grid.RowSpan" Value="{Binding RowSpan}" />
                <Setter Property="IsVisible" Value="{Binding IsVisible}" />
              </Style>
            </ItemsControl.Styles>
            <ItemsControl.ItemsPanel>
              <ItemsPanelTemplate>
                <c:BindableGrid ColumnDefinitionsSource="{Binding CurrentLayout.ColumnDefinitions}"
                                RowDefinitionsSource="{Binding CurrentLayout.RowDefinitions}"
                                ShowGridLines="False" />
              </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.ItemTemplate>
              <locator:ViewLocator />
            </ItemsControl.ItemTemplate>
          </ItemsControl>
        </ScrollViewer>
        <Border ClipToBounds="False"
                CornerRadius="5"
                Background="{DynamicResource TileRegionColor}"
                Margin="6"
                Padding="16"
                BoxShadow="{DynamicResource InfoBoxShadow}"
                IsVisible="{Binding IsEmptyWallet}">
          <StackPanel>
            <Label Content="Since this is a empty wallet, there isn't a lot going on here. Click an option below to receive Bitcoin."
                   Classes="wrap center"
                   MaxWidth="400"
                   HorizontalAlignment="Center"
                   VerticalAlignment="Center"/>
              <Button Classes="function"
                      Command="{Binding ReceiveCommand}"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center">
              <StackPanel Orientation="Horizontal" Spacing="15">
                <PathIcon Data="{StaticResource wallet_action_receive}" />
                <TextBlock Text="Receive" />
              </StackPanel>
            </Button>
          </StackPanel>
        </Border>
      </Panel>
      <Panel>
        <history:HistoryTable Name="HistoryTable"
                              DataContext="{Binding History}"
                              HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                              IsVisible="{Binding !IsTransactionHistoryEmpty}"/>
        <Border ClipToBounds="False"
                CornerRadius="5"
                Background="{DynamicResource TileRegionColor}"
                Margin="6"
                Padding="16"
                BoxShadow="{DynamicResource InfoBoxShadow}"
                DataContext="{Binding History}"
                IsVisible="{Binding IsTransactionHistoryEmpty}">
          <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
            <Image Width="234" Height="110" HorizontalAlignment="Center" VerticalAlignment="Center">
              <Image.Source>
                <DrawingImage Drawing="{StaticResource history_table_empty_wallet}"/>
              </Image.Source>
            </Image>
            <Label Content="Nothing to show here yet."
                   Classes="bold center wrap h5"
                   MaxWidth="400"
                   Margin="0,24,0,0"
                   HorizontalAlignment="Center"
                   VerticalAlignment="Center"/>
            <Label Content="Recent transactions will appear here once you make some transactions or when your wallet finishes loading."
                   Classes="wrap center"
                   MaxWidth="400"
                   HorizontalContentAlignment="Center"
                   HorizontalAlignment="Center"
                   VerticalAlignment="Center"/>
          </StackPanel>
        </Border>
      </Panel>
    </DockPanel>
  </c:ContentArea>
</UserControl>
