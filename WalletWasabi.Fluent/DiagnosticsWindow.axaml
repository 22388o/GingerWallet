<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:c="clr-namespace:WalletWasabi.Fluent.Controls"
        mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
        x:Class="WalletWasabi.Fluent.DiagnosticsWindow"
        EnableDisabledDiagnostic="False"
        EnablePointerOverDiagnostic="False"
        EnableIsVisibleFalseDiagnostic="False"
        EnableFocusWithinDiagnostic="False"
        EnableFocusVisibleDiagnostic="False"
        EnableFocusDiagnostic="False"
        Title="DiagnosticsWindow">
  <Window.Resources>

    <!-- Blue - :disabled :not(:pointerover) -->
    <Style Selector=":is(Control)[IsVisible=True]:disabled"
           x:Key="DisabledDiagnosticStyle">
      <Setter Property="(c:XamlAdornerLayer.Adorner)">
        <Template>
          <Border Width="{Binding $parent[Control].Bounds.Width}"
                  Height="{Binding $parent[Control].Bounds.Height}"
                  BorderBrush="Blue"
                  BorderThickness="1"
                  Background="Transparent"
                  IsHitTestVisible="False">
          </Border>
        </Template>
      </Setter>
    </Style>

    <!-- Red - :pointerover -->
    <Style Selector=":is(Control)[IsVisible=True]:pointerover"
           x:Key="PointerOverDiagnosticStyle">
      <Setter Property="(c:XamlAdornerLayer.Adorner)">
        <Template>
          <Panel Width="{Binding $parent[Control].Bounds.Width}"
                 Height="{Binding $parent[Control].Bounds.Height}">
            <StackPanel Orientation="Horizontal" Margin="0,-14,0,0">
              <TextBlock Text="{Binding $parent[Control].Bounds.Width}" Foreground="Red" FontSize="12"/>
              <TextBlock Text=" x " Foreground="Red" FontSize="12"/>
              <TextBlock Text="{Binding $parent[Control].Bounds.Height}" Foreground="Red" FontSize="12"/>
              <!--
              <TextBlock Text=" (" Foreground="Red" FontSize="12"/>
              <TextBlock Text="{Binding $parent[Control].DataContext}" Foreground="Red" FontSize="12"/>
              <TextBlock Text=")" Foreground="Red" FontSize="12"/>
              -->
            </StackPanel>
            <Border Width="{Binding $parent[Control].Bounds.Width}"
                    Height="{Binding $parent[Control].Bounds.Height}"
                    BorderBrush="Red"
                    BorderThickness="1"
                    Background="Transparent"
                    IsHitTestVisible="False">
            </Border>
          </Panel>
        </Template>
      </Setter>
    </Style>

    <!-- Yellow - IsVisible=false :not(:pointerover) -->
    <Style Selector=":is(Control)[IsVisible=False]"
           x:Key="IsVisibleFalseDiagnosticStyle">
      <Setter Property="(c:XamlAdornerLayer.Adorner)">
        <Template>
          <Border Width="{Binding $parent[Control].Bounds.Width}"
                  Height="{Binding $parent[Control].Bounds.Height}"
                  BorderBrush="Yellow"
                  BorderThickness="1"
                  Background="Transparent"
                  IsHitTestVisible="False">
          </Border>
        </Template>
      </Setter>
    </Style>

    <!-- Orange - :focus-within :not(:pointerover) -->
    <Style Selector=":is(Control)[IsVisible=True]:focus-within"
           x:Key="FocusWithinDiagnosticStyle">
      <Setter Property="(c:XamlAdornerLayer.Adorner)">
        <Template>
          <Border Width="{Binding $parent[Control].Bounds.Width}"
                  Height="{Binding $parent[Control].Bounds.Height}"
                  BorderBrush="Orange"
                  BorderThickness="1"
                  Background="Transparent"
                  IsHitTestVisible="False">
          </Border>
        </Template>
      </Setter>
    </Style>

    <!-- Pink - :focus-visible :not(:pointerover) -->
    <Style Selector=":is(Control)[IsVisible=True]:focus-visible"
           x:Key="FocusVisibleDiagnosticStyle">
      <Setter Property="(c:XamlAdornerLayer.Adorner)">
        <Template>
          <Border Width="{Binding $parent[Control].Bounds.Width}"
                  Height="{Binding $parent[Control].Bounds.Height}"
                  BorderBrush="Pink"
                  BorderThickness="1"
                  Background="Transparent"
                  IsHitTestVisible="False">
          </Border>
        </Template>
      </Setter>
    </Style>

    <!-- Cyan - :focus :not(:pointerover) -->
    <Style Selector=":is(Control)[IsVisible=True]:focus"
           x:Key="FocusDiagnosticStyle">
      <Setter Property="(c:XamlAdornerLayer.Adorner)">
        <Template>
          <Border Width="{Binding $parent[Control].Bounds.Width}"
                  Height="{Binding $parent[Control].Bounds.Height}"
                  BorderBrush="Cyan"
                  BorderThickness="1"
                  Background="Transparent"
                  IsHitTestVisible="False">
          </Border>
        </Template>
      </Setter>
    </Style>

  </Window.Resources>

  <StackPanel>
    <CheckBox Name="DisabledCheckBox"
              Click="DisabledCheckBox_OnClick"
              Content="Blue - :disabled" />
    <CheckBox Name="PointerOverCheckBox"
              Click="PointerOverCheckBox_OnClick"
              Content="Red - :pointerover" />
    <CheckBox Name="IsVisibleFalseCheckBox"
              Click="IsVisibleFalseCheckBox_OnClick"
              Content="Yellow - IsVisible=false" />
    <CheckBox Name="FocusWithinCheckBox"
              Click="FocusWithinCheckBox_OnClick"
              Content="Orange - :focus-within" />
    <CheckBox Name="FocusVisibleCheckBox"
              Click="FocusVisibleCheckBox_OnClick"
              Content="Pink - :focus-visible" />
    <CheckBox Name="FocusCheckBox"
              Click="FocusCheckBox_OnClick"
              Content="Cyan - :focus" />
  </StackPanel>

</Window>
