<Styles xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:c="clr-namespace:WalletWasabi.Fluent.Controls">

  <!-- Blue - :disabled (currently commented out as it adds a lot of noise) -->
  <!--
  <Style Selector=":is(Control)[IsVisible=True]:disabled:not(:pointerover)">
    <Setter Property="(c:XamlAdornerLayer.Adorner)">
      <Template>
        <Border Width="{Binding $parent[Control].Bounds.Width}"
                Height="{Binding $parent[Control].Bounds.Height}"
                BorderBrush="#09C0C0C0"
                BorderThickness="1"
                Background="Transparent"
                IsHitTestVisible="False">
        </Border>
      </Template>
    </Setter>
  </Style>
  -->

  <!-- Red - :pointerover -->
  <Style Selector=":is(Control)[IsVisible=True]:pointerover">
    <Setter Property="(c:XamlAdornerLayer.Adorner)">
      <Template>
        <Panel Width="{Binding $parent[Control].Bounds.Width}"
               Height="{Binding $parent[Control].Bounds.Height}">
          <StackPanel Orientation="Horizontal" Margin="0,-14,0,0">
            <TextBlock Text="{Binding $parent[Control].Bounds.Width}" Foreground="Red" FontSize="12"/>
            <TextBlock Text=" x " Foreground="Red" FontSize="12"/>
            <TextBlock Text="{Binding $parent[Control].Bounds.Height}" Foreground="Red" FontSize="12"/>
            <!--
            <TextBlock Text=" (" Foreground="Red" FontSize="12"/>
            <TextBlock Text="{Binding $parent[Control].DataContext}" Foreground="Red" FontSize="12"/>
            <TextBlock Text=")" Foreground="Red" FontSize="12"/>
            -->
          </StackPanel>
          <Border Width="{Binding $parent[Control].Bounds.Width}"
                  Height="{Binding $parent[Control].Bounds.Height}"
                  BorderBrush="Red"
                  BorderThickness="1"
                  Background="Transparent"
                  IsHitTestVisible="False">
          </Border>
        </Panel>
      </Template>
    </Setter>
  </Style>

  <!-- Yellow - IsVisible=false -->
  <Style Selector=":is(Control)[IsVisible=False]">
    <Setter Property="(c:XamlAdornerLayer.Adorner)">
      <Template>
        <Border Width="{Binding $parent[Control].Bounds.Width}"
                Height="{Binding $parent[Control].Bounds.Height}"
                BorderBrush="Yellow"
                BorderThickness="1"
                Background="Transparent"
                IsHitTestVisible="False">
        </Border>
      </Template>
    </Setter>
  </Style>

  <!-- Orange - :focus-within -->
  <Style Selector=":is(Control)[IsVisible=True]:focus-within:not(:pointerover)">
    <Setter Property="(c:XamlAdornerLayer.Adorner)">
      <Template>
        <Border Width="{Binding $parent[Control].Bounds.Width}"
                Height="{Binding $parent[Control].Bounds.Height}"
                BorderBrush="Orange"
                BorderThickness="1"
                Background="Transparent"
                IsHitTestVisible="False">
        </Border>
      </Template>
    </Setter>
  </Style>

  <!-- Pink - :focus-visible -->
  <Style Selector=":is(Control)[IsVisible=True]:focus-visible:not(:pointerover)">
    <Setter Property="(c:XamlAdornerLayer.Adorner)">
      <Template>
        <Border Width="{Binding $parent[Control].Bounds.Width}"
                Height="{Binding $parent[Control].Bounds.Height}"
                BorderBrush="Pink"
                BorderThickness="1"
                Background="Transparent"
                IsHitTestVisible="False">
        </Border>
      </Template>
    </Setter>
  </Style>

  <!-- Cyan - :focus -->
  <Style Selector=":is(Control)[IsVisible=True]:focus:not(:pointerover)">
    <Setter Property="(c:XamlAdornerLayer.Adorner)">
      <Template>
        <Border Width="{Binding $parent[Control].Bounds.Width}"
                Height="{Binding $parent[Control].Bounds.Height}"
                BorderBrush="Cyan"
                BorderThickness="1"
                Background="Transparent"
                IsHitTestVisible="False">
        </Border>
      </Template>
    </Setter>
  </Style>

</Styles>
